1)駅から路線一覧
 上り方向or下り方向
2)路線から分岐駅一覧
 開始駅 and (上り方向 or 下り方向)

1)は直近路線(経路リストの最新)を引数とする。経路リストの最新はリスト内直近の路線は、除外する。上り下りは不要(関数仕様として将来の為必要
2)は現在駅(経路リストの最新)ー経路リストを引数とする。経路リスト内にある駅までを候補リストとする。その先は載せない。経路リスト内の直近の駅(現在駅)は、除外。経路リスト内に存在する駅があったら、その駅までを候補リストとする。


豊橋、富士、沼津

リストー分岐駅、駅の路線

経路：渋谷ー大崎
-----------------
          | 渋谷
------+----------
山手線| 大崎。
-----------------

経路：渋谷ー阿佐ケ谷
--------------------
          | 渋谷
------+----------
山手線| 新宿
------+----------
中央線| 阿佐ケ谷。
------+----------

経路：渋谷ー八戸
--------------------
             | 渋谷
--------+----------
山手線   | 東京
--------+----------
東北本線| 八戸
-----------------

#b 経路：渋谷ー原宿
-----------------
          | 渋谷
------+----------
山手線| 原宿。
-----------------
大回りもあり得るが山手線は、#bの場合、着駅指定時に自動決定。
(規則上OKなので)
小海ー海尻なども同様<-嘘。0大回り可能。
石狩当別ー新十津川などは、自動決定。
札幌ー新十津川も。
成瀬ー長津田などは、大回りもあり得るので、自動決定は、ない。最初の経由リストで、横浜線が挙がり、横浜線を選択後、分岐駅一覧とともに着駅が挙がる。リストは、路線は、=が行頭に、分岐駅は+、着駅は、>、それ以外の代表経由駅は、~を付加する。

留萌ー深川ー滝川ー富良野
  留萌線(1)、函館本線(1)、根室本線(1)
()内は選択の余地

経路重複の検出方法？検出契機？
経路リストはノードコードで？



Uの字

Sの字
長津田ー(横浜線)ー東神奈川ー(東海道本線)ー国府津ー(御殿場線)ー沼津ー(東海道本線)ー富士ー(身延線)ー甲府ー(中央東線)ー辰野ー(飯田線)ー豊橋ー(東海道本線)ー名古屋



｜長津田
横浜線　｜東神奈川
東海道本線｜　国府津
御殿場線　｜　沼津
東海道本線｜　富士
身延線｜　甲府
中央東線｜　辰野
飯田線｜　豊橋
東海道本線｜　名古屋市内

片道切符妥当性チェック方法は？
以下、選択肢(*は選択、-は名古屋いくには無理
長津田
横浜線
新横浜、橋本、八王子、東神奈川
東海道本線
横浜、鶴見、川崎、品川、東京、-大船、茅ケ崎、国府津、小田原、熱海、沼津、富士、豊橋、太布、金山
（※MARSでは上記すべてと大阪や尼崎、三河安城など新幹線駅もすべて出る、線区だけの指定もOK）

、登戸
南武線、立川(府中本町,立川,武蔵小杉,尻手，川崎)
中央線(青梅線)、西国分寺(,八王子,甲府,小淵沢、岡谷、塩尻、辰野、松本、新宿、御茶ノ水、東京)
武蔵野線、府中本町 (片道無効

片道無効条件
過去経路リストから分岐駅一覧にあるか？
府中本町は、南武線で立川、登戸間にあるか？



枝コード不要。

経路リスト内に指定する経路は路線名(線区)ではなく、枝コード(独自定義)にする。

枝コード(leaf)の構成
線区コードーF路線T
愛称
端駅1 (上り側)
端駅2 (下り側)
経由代表駅 (路線名の場合あり)
営業キロ

＊枝コード内の線区は、2つ以上の分岐駅を持たない
＊盲腸線は、同列配列で管理されコード体系で区別
＊分岐しない2つ以上の線区は、一つの枝コードとする

幹？
枝コードの集合は？
川越ー秋田
3区間あったら、1, 2,3,12,123,23の6通り、即ちsum(1, n)

+枝コードから線区コードを得る




分岐駅のリスト方法？

自動決定の判断？
分岐駅が
経路リスト内の枝コード体系？
東北本線や東海道本線などは？
ユーザー指定が東北本線一本なのに、北上、一ノ関と指定した場合は？


分岐駅の乗り換え路線のリスト方法？
テーブルから。
経路リスト内に存在する場合は除外
->その方法？

新十津川ー札幌ー？
ー函館本線、千歳線
函館本線を選択後、分岐駅リストは？
白石、深川、滝川、旭川、長万部(小樽、国縫)。




駅コードin
所属線区in
lp:
if 所属線区1つ越え
lp2：
線区内分岐駅の全リスト
else
線区をリストへ
endif
選択ルートadd →経路リスト
if  線区then goto lp2
if 駅 then goto lp1

上記フローの駅リストは分岐駅のみなので無効

行き止まり駅は着未指定時リスト
先に着駅がなくても進ませて、戻らせる

発駅、路線、分岐駅、路線、分岐駅、の繰り返し指定となる

発駅指定後、路線選択メソッド12,13
路線指定後、分岐駅選択メソッド17
駅指定後、路線選択メソッド12,13
経路にあるのを除外するアルゴリズム




+1 都道府県リストを返す
+2 都道府県コードと「あ〜ん」を入力とし駅一覧を返す
+3 路線コードと「あ〜ん」を入力とし駅一覧を返す
+4 全路線リストを返す
+5 全会社リストを返す
+6 会社コードから路線一覧を返す
+7 都道府県コードから路線リストを返す
+8「あ〜ん」を入力とし路線一覧を返す
+9 ひらがな駅名から駅一覧を返す
+10 漢字駅名から駅一覧を返す
+11 入力履歴の最新順に駅一覧を返す

+12 駅名から駅コードを返す

+13 駅コードから路線コード一覧を返す

+14 路線コードと開始駅コードと経路内路線駅リストを入力として駅一覧を返す
（経路入力時、着駅指定リストに使用）

+16 経路リストから路線コード内の駅一覧を返す（メソッド15の最後の入力引数で分岐駅前提）
（池袋->渋谷->目黒->秋葉原->御茶ノ水のとき、代々木と神田が該当）

+17 路線コードから分岐駅一覧を返す
        オプションとして駅コードも指定
         さらにオプションとして最近の経由リストを指定
     駅コード指定の場合、近い順に昇順ソート、経由リスト内に存在する駅は選択不可？
+18 経路リストをチェック
     経路エラーはあり得ないので、診断用
+19 経路リストから営業キロを計算
      配列で会社線、特定経路、JR各線別
      に返す
+20 営業キロ情報から金額情報を返す
+21 指定した駅が経路リスト内で通過していないかチェックする
+22 指定駅が路線内に存在する駅か？
         #Aで町田ー長津田と指定してたら？



海尻から小淵沢経由で中央東線の分岐駅リストは、
       辰野、それ以遠、甲府、八王子、、

発駅指定
T型ー海尻発
＊型ー東京
I型ー稚内

途中駅指定
＊型とT型があり得る
I型は、あり得ない
経路ラストの路線はあり有ない？
中央線辰野や塩尻であり得る

海尻発 小海線、
*小淵沢、佐久平、小諸
*中央東線
甲府、辰野、塩尻、*八王子、、、
八高線、*横浜線、(ここで中央東線を含むか？ー不要)
橋本、新横浜、東神奈川、(横浜は不要)
、、、

+13八王子ー千葉方面で、中央線、東京で路線一覧に中央線を含むか？
含んだとすると、分岐駅一覧に御茶ノ水、代々木、新宿が表示。選択。経路リスト内に存在する駅として選択不可。
辰野、塩尻までたくさんあり、知らないユーザーは永遠とトライしてみることになる？

#A 町田ー東神奈川ー茅ケ崎ー橋本ー淵野辺ー橋本で、過去通過した横浜線を2度とおる


経路リストは32ビット値の固定配列で、上位16が線区、下位16が駅
[0]の下位は発駅。着駅は最後[n]の上位は0(空)


経路指定時は、中央線と表記し、計算結果の表記は中央東線と表記する


線区番号(通し)
駅番号

Operation:
発駅指定
着駅指定
経路指定

経路検索はしない(地図を見て自分で選択）
行き止まり・元経路（一度通っている線区）を辿ったら、エラーメッセージ、「戻る」で過去指定経由地を削除してゆく。
これも手動指定。

発＿＿＿＿＿＿＿  
着＿＿＿＿＿＿＿
経由：-----------
       |                  |  |+|
       |                  |  |-|
       |                  |
       ------------
営業キロ： 999.9km
運賃： \9,999
有効期間： 3日


※ 経路が重複しています。「取消」をクリックして経由を修正してください。
(連続乗車券は個別指定)
※ 着駅へ到達できません。「取消」をクリックして経由を修正してください。
※ ｘｘｘ−ｘｘｘ間の経路はいずれも選択可能です。ｘｘｘｘ経由で計算します。
※ 近郊区間内の経路はいずれも選択可能です。指定のとおりで計算していますが、
実運賃は最小経路で計算されます。


マルスと同様

線区ごとに構造体
駅コードは、線区No+駅インデックスとする（下る順）
複数に分かれる駅（大宮など）は、複数のコードを持つことになる

typedef line {
  int lineno;      // index of array
  int num_sta;
  int bra_sta[];
}

sta[]

駅選択、駅入力
線−駅
経由入力
発駅が1線のみなら、線を候補リストに追加する（上り下りがわかれようが同様）

駅コードint 線区+1000
線区コード、線名、読み、起点駅コード、終点コード
分岐点jct
駅コード、所属線区1、所属線区2、所属線区3、所属線区4
駅コード、駅名、読み、都道府県、線区コード、同名駅コード、所属会社コード
上越国際スキー城
JR6社
駅リスト:あいうえお順、県別、線区別
線別営業キロ 線区コード、駅コード[]
路線 線区コードint、駅数int、駅リスト、営業キロリスト


2011年1月7日0:24:30 の変更内容に衝突があります:
線区番号(通し)
駅番号

Operation:
発駅指定
着駅指定
経路指定

経路検索はしない(地図を見て自分で選択）
行き止まり・元経路（一度通っている線区）を辿ったら、エラーメッセージ、「戻る」で過去指定経由地を削除してゆく。
これも手動指定。

発＿＿＿＿＿＿＿  着＿＿＿＿＿＿＿
経由：　　　　　　　　　　候補：
ｘｘｘｘ　　　　　　　　　　　ｘｘｘｘ
ｘｘｘｘ　　　　　　　　　　　xxxxx
ｘｘｘｘ
「取消」

※ 経路が重複しています。「取消」をクリックして経由を修正してください。
(連続乗車券は個別指定)
※ 着駅へ到達できません。「取消」をクリックして経由を修正してください。
※ ｘｘｘ−ｘｘｘ間の経路はいずれも選択可能です。ｘｘｘｘ経由で計算します。
※ 近郊区間内の経路はいずれも選択可能です。指定のとおりで計算していますが、
実運賃は最小経路で計算されます。

マルスと同様

線区ごとに構造体
駅コードは、線区No+駅インデックスとする（下る順）
複数に分かれる駅（大宮など）は、複数のコードを持つことになる

typedef line {
  int lineno;      // index of array
  int num_sta;
  int bra_sta[];
}

sta[]

駅選択、駅入力
線−駅
経由入力
発駅が1線のみなら、線を候補リストに追加する（上り下りがわかれようが同様）

駅コードint 線区+1000
線区コード、線名、読み、起点駅コード、終点コード
分岐点jct
駅コード、所属線区1、所属線区2、所属線区3、所属線区4
駅コード、駅名、読み、都道府県、線区コード、同名駅コード、所属会社コード
上越国際スキー城
JR6社
駅リスト:あいうえお順、県別、線区別
線別営業キロ 線区コード、駅コード[]
路線 線区コードint、駅数int、駅リスト、営業キロリスト

駅を選ぶーエリア、線区、あーん順のリスト


 

| Style : Background0, Font0, Size16 |