*** This document is UTF-8 Japanese only.

データベースの作成方法
 2021.5 より、データベースマスターをExcelからGoogle Spreadsheet へ移行しました。
 そのまま手を加えずに、ExcelをGoogleスプレッドシートへインポートしました。
 （マクロなど特殊なコードやシート関数など使っていませんので、特に警告も失われたものもないようです）
 また、今まで Windows 環境でDBのメンテナンスを行っていましたが、2021.5 より全てMac PC上でおこないます。
 (MacOSのターミナル環境のみ=zshですので、Linux, Windows WSL でもどの環境でも問題ないはずです)
 make を実行するだけで、Googleスプレッドシートからデータをダウンロードし、
 sqlite DBを作成し、WindowsDB、AndroidDB、iOS DBへもコピーされます
 
 ◆ 作成方法

     1) スプレッドシート jrdb2021 を編集
     2) Access Tokenを取得（取得方法は、 down_spr_as_text.sh のヘッダコメントを参照)
     3) Shellにて（Mac zsh, bash, linux bash, Windows wsl bash等）、db フォルダで、
        make ACCESS_TOKEN=xxxxx
        を実行（ユーザ権限で可）

        linux/mac環境には、curl, python3 が必要です
        python3 には、sqlite3 モジュールが必要です

     4) 全DBが作成され, Windows, iOS, Android 開発環境へもセットアップされる
        （ただしDB名の変更はそれぞれ行う必要があります）

 ◆ 少し内部解説
   - make の処理は、以下順です
     *.tmp => down_spr_as_text.sh  => *.tmp, *.txt ： Googleスプレッドシートの各シートをダウンロードします
     *.tmp をマージして、*.txt を作成するため、*.tmp は不要です
     *.txt から *.db （SQLITE用DB）を作成
     *.db を各OS開発環境ディレクトリへコピー
   - Googleスプレッドのダウンロードを実施したい場合は、*.tmp を削除します（*.txtも更新されます)
   - DBを作成し直す場合、*.db を削除します。Makeでは、node 作成に失敗しても、*.dbは残るため、
     削除してからmakeの再実行が必要となります。

     ※ スプレッドシートのURLとシートIDは、ファイル SPREADSHEET に記載されています。
 
 ◆ DB名の変更


 spr2tsv.gs - Googleスプレッドシートアドイン用、Google Application Script（未使用）











---- 以下は、2021.4 まで使用していた、Windows環境の旧方式

      2017.2.24
 ◆ 作者環境はMAC OS-X上で開発していますが、DBメンテナンスのすべては、Windows上で動作することを前提としています。
 (MAC OS-X上にVirtualBoxでWindowsをいれて動作。Windows上にPython3、Excelが必要)

 　Unix環境(Linux、MACなど)でも可能ですが、Excelからテキストへ変換する処理を手作業でおこなう必要があります。
 　具体的には、Excelの各シートを全選択＆テキストエディタへ貼り付けという作業をし、jrdb20xx.txt という
　 テキストファイルで保存します。
　 Windows上ではこれをjr_db_reg.jseが一括でおこなっております。

 ◆ レシピ：

  jrdb.xlsx              データベース作成元データの元データマスター
　　                     すべてのデータベースの元ネタ

 ◆ ターゲット：

　jrdb2014.db            Sqlite3 データベース
　jrdb2015.db
　jrdb2017.db
　jrdb2018.db
　jrdb2014.db.enc        Sqlite3 データベースを暗号化したもの
　jrdb2015.db.enc
　jrdb2017.db.enc
　jrdb2019.db.enc

  最新は2019、その他は旧データベース（いつか統合したい）
  .encは暗号化したもので、Windows(MFC)版ではこれを使用で、リソースディレクトリ
  ../app/win_mfc/fjr_mfc/alps_mfc/res/ へ 配置される(mkdball.batでおこなう)
  *.db は、iOS版は,  ../app/Farert/Farert へ 配置される(mkdball.batでおこなう)

 ◆ ツール：
  jr_db_reg.jse          Excelシート(jdrb.xlsx)からテキストファイル(jrdb2016.txt, jrdb2014.txt, jrdb2015.txt)
　　　　　　　　         を作成する
  mkdball.bat            データベース作成スクリプト(jrdb.txtからjr.dbを生成・作成する)
  mkdb.bat　　　　　　　 mkfnsll.batから呼ばれる

scripts\jr_db_reg.py	mkdb.batから呼ばれる
　　　　　　　　　　　　データベース操作関連スクリプトやテストコードなどを格納
                            実行するときは、現ディレクトリをカレントとして、
                            > python scripts\xxx.py
                        として実行する。（scripts\内をカレントとして実行してもDBが読み込めないので実行失敗する)

 ◆ 作成方法

     1) jrdb.xlsx を編集＆保存＆閉じる

     2) エクスプローラ上で、jr_db_reg.jse へ jrdb.xlsx をD&Dする
        または、
        jr_db_reg.jse jrdb.xlsx

        をコマンドプロンプトで実行する

     3) mkdball.bat を実行する（エクスプローラ上で可：引数なし）

        以上で完了

 ◆ 各アプリへの組み込み
 　　　上記のバッチファイルでプロジェクトフォルダへコピーしている（Windows版プロジェクト、iOS版プロジェクト)
      Android版用プロジェクトはZIP化しなければならないため(DOSバッチファイルでは面倒)、MACコマンドプロンプト側で
      mkdb-android.sh を実行する

以上
